
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDEINT_DIVIDErightPOWERAND ASSIGN BOOLEAN CASE CLASS COMMA DIVIDE DIVIDE_ASSIGN DOT ELIF ELSE EQ FALSE FINAL FLOAT FN FOR FSTRING GE GT ID IF INTEGER INT_DIVIDE INT_DIVIDE_ASSIGN LBRACE LBRACKET LE LPAREN LT MINUS MINUS_ASSIGN MODULO MODULO_ASSIGN NE NOT NULL OR PLUS PLUS_ASSIGN POWER POWER_ASSIGN RBRACE RBRACKET RPAREN SEMI STRING SWITCH TERNARY_C TERNARY_Q TIMES TIMES_ASSIGN TRUE WHILEvar_assign : var ASSIGN expr\n| var PLUS_ASSIGN expr\n| var MINUS_ASSIGN expr\n| var TIMES_ASSIGN expr\n| var DIVIDE_ASSIGN expr\n| var POWER_ASSIGN expr\n| var MODULO_ASSIGN expr\n| var INT_DIVIDE_ASSIGN exprvar_assign : final_var ASSIGN expr\n| final_var PLUS_ASSIGN expr\n| final_var MINUS_ASSIGN expr\n| final_var TIMES_ASSIGN expr\n| final_var DIVIDE_ASSIGN expr\n| final_var POWER_ASSIGN expr\n| final_var MODULO_ASSIGN expr\n| final_var INT_DIVIDE_ASSIGN exprvar : IDfinal_var : FINAL IDexpr : expr PLUS expr\n| expr MINUS expr\n| expr TIMES expr\n| expr DIVIDE expr\n| expr INT_DIVIDE expr  \n| expr POWER expr\n| factorfactor : PLUS factor\n| MINUS factor\n| INTEGER\n| FLOAT\n| LPAREN expr RPAREN\n| var'
    
_lr_action_items = {'ID':([0,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,25,26,30,46,47,48,49,50,51,],[4,22,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'FINAL':([0,],[5,]),'$end':([1,4,23,24,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,52,53,55,56,57,58,59,60,61,],[0,-17,-31,-1,-25,-28,-29,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-26,-27,-19,-20,-21,-22,-23,-24,-30,]),'ASSIGN':([2,3,4,22,],[6,14,-17,-18,]),'PLUS_ASSIGN':([2,3,4,22,],[7,15,-17,-18,]),'MINUS_ASSIGN':([2,3,4,22,],[8,16,-17,-18,]),'TIMES_ASSIGN':([2,3,4,22,],[9,17,-17,-18,]),'DIVIDE_ASSIGN':([2,3,4,22,],[10,18,-17,-18,]),'POWER_ASSIGN':([2,3,4,22,],[11,19,-17,-18,]),'MODULO_ASSIGN':([2,3,4,22,],[12,20,-17,-18,]),'INT_DIVIDE_ASSIGN':([2,3,4,22,],[13,21,-17,-18,]),'PLUS':([4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,],[-17,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,-31,46,25,25,-25,-28,-29,25,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,25,25,25,25,25,25,-26,-27,46,-19,-20,-21,-22,-23,-24,-30,]),'MINUS':([4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,],[-17,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,-31,47,26,26,-25,-28,-29,26,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,26,26,26,26,26,26,-26,-27,47,-19,-20,-21,-22,-23,-24,-30,]),'TIMES':([4,23,24,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,52,53,54,55,56,57,58,59,60,61,],[-17,-31,48,-25,-28,-29,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,-26,-27,48,48,48,-21,-22,-23,-24,-30,]),'DIVIDE':([4,23,24,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,52,53,54,55,56,57,58,59,60,61,],[-17,-31,49,-25,-28,-29,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,-26,-27,49,49,49,-21,-22,-23,-24,-30,]),'INT_DIVIDE':([4,23,24,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,52,53,54,55,56,57,58,59,60,61,],[-17,-31,50,-25,-28,-29,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,-26,-27,50,50,50,-21,-22,-23,-24,-30,]),'POWER':([4,23,24,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,52,53,54,55,56,57,58,59,60,61,],[-17,-31,51,-25,-28,-29,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,-26,-27,51,51,51,51,51,51,51,-30,]),'RPAREN':([4,23,27,28,29,52,53,54,55,56,57,58,59,60,61,],[-17,-31,-25,-28,-29,-26,-27,61,-19,-20,-21,-22,-23,-24,-30,]),'INTEGER':([6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,25,26,30,46,47,48,49,50,51,],[28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'FLOAT':([6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,25,26,30,46,47,48,49,50,51,],[29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'LPAREN':([6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,25,26,30,46,47,48,49,50,51,],[30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'var_assign':([0,],[1,]),'var':([0,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,25,26,30,46,47,48,49,50,51,],[2,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'final_var':([0,],[3,]),'expr':([6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,30,46,47,48,49,50,51,],[24,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,54,55,56,57,58,59,60,]),'factor':([6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,25,26,30,46,47,48,49,50,51,],[27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,52,53,27,27,27,27,27,27,27,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> var_assign","S'",1,None,None,None),
  ('var_assign -> var ASSIGN expr','var_assign',3,'p_var_assign','parser.py',19),
  ('var_assign -> var PLUS_ASSIGN expr','var_assign',3,'p_var_assign','parser.py',20),
  ('var_assign -> var MINUS_ASSIGN expr','var_assign',3,'p_var_assign','parser.py',21),
  ('var_assign -> var TIMES_ASSIGN expr','var_assign',3,'p_var_assign','parser.py',22),
  ('var_assign -> var DIVIDE_ASSIGN expr','var_assign',3,'p_var_assign','parser.py',23),
  ('var_assign -> var POWER_ASSIGN expr','var_assign',3,'p_var_assign','parser.py',24),
  ('var_assign -> var MODULO_ASSIGN expr','var_assign',3,'p_var_assign','parser.py',25),
  ('var_assign -> var INT_DIVIDE_ASSIGN expr','var_assign',3,'p_var_assign','parser.py',26),
  ('var_assign -> final_var ASSIGN expr','var_assign',3,'p_final_var_assign','parser.py',30),
  ('var_assign -> final_var PLUS_ASSIGN expr','var_assign',3,'p_final_var_assign','parser.py',31),
  ('var_assign -> final_var MINUS_ASSIGN expr','var_assign',3,'p_final_var_assign','parser.py',32),
  ('var_assign -> final_var TIMES_ASSIGN expr','var_assign',3,'p_final_var_assign','parser.py',33),
  ('var_assign -> final_var DIVIDE_ASSIGN expr','var_assign',3,'p_final_var_assign','parser.py',34),
  ('var_assign -> final_var POWER_ASSIGN expr','var_assign',3,'p_final_var_assign','parser.py',35),
  ('var_assign -> final_var MODULO_ASSIGN expr','var_assign',3,'p_final_var_assign','parser.py',36),
  ('var_assign -> final_var INT_DIVIDE_ASSIGN expr','var_assign',3,'p_final_var_assign','parser.py',37),
  ('var -> ID','var',1,'p_var','parser.py',41),
  ('final_var -> FINAL ID','final_var',2,'p_final_var','parser.py',45),
  ('expr -> expr PLUS expr','expr',3,'p_expr','parser.py',50),
  ('expr -> expr MINUS expr','expr',3,'p_expr','parser.py',51),
  ('expr -> expr TIMES expr','expr',3,'p_expr','parser.py',52),
  ('expr -> expr DIVIDE expr','expr',3,'p_expr','parser.py',53),
  ('expr -> expr INT_DIVIDE expr','expr',3,'p_expr','parser.py',54),
  ('expr -> expr POWER expr','expr',3,'p_expr','parser.py',55),
  ('expr -> factor','expr',1,'p_expr','parser.py',56),
  ('factor -> PLUS factor','factor',2,'p_factor','parser.py',64),
  ('factor -> MINUS factor','factor',2,'p_factor','parser.py',65),
  ('factor -> INTEGER','factor',1,'p_factor','parser.py',66),
  ('factor -> FLOAT','factor',1,'p_factor','parser.py',67),
  ('factor -> LPAREN expr RPAREN','factor',3,'p_factor','parser.py',68),
  ('factor -> var','factor',1,'p_factor','parser.py',69),
]
